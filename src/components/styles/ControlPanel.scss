@import "variables";

//# component
.controlPanelContainer {
  display: flex;
  flex-direction: row;
  height: 8vh;
  width: 95%;
  justify-content: space-around;
  align-items: flex-end;
  max-width: 900px;
  margin: 0 auto;
  padding: 50px 20px 0 20px;

  button {
    font-family: $fontMono;
    background-color: $ltThemeBtnBG;
    color: $ltThemeBtnBGTxt;
    border: 1px solid $ltThemeBorderColor;
    box-shadow: $boxShadowDefault;
    border-radius: 8px;
    padding: 0.5em 1em;
    font-size: 0.85em;
    font-weight: 700;
    text-align: center;
    align-self: center;
  }

  label {
    font-size: 14px;
  }

  button {
    cursor: pointer;
  }

  input {
    background-color: $ltThemeInput;
  }

  input::-webkit-inner-spin-button,
  input::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type="number"] {
    -moz-appearance: textfield;
    appearance: textfield;
  }

  input[type="number"] {
    width: 4em;
    padding: 5px;
    margin-top: 5px;
    text-align: center;
  }

  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
    100% {
      transform: scale(1);
    }
  }

  .shapeSelectPnl {
    display: flex;
    align-self: flex-end;
    flex-direction: row;
    justify-content: space-between;
    min-width: 125px;

    .rectangleBtn,
    .circleBtn {
      &:hover {
        animation: pulse 1s infinite;
      }
    }

    .rectangleBtn {
      width: 30px;
      height: 30px;
      border: $ltThemeBorderColor 1px solid;
      cursor: pointer;
      background: 
        /* Top shadow */ linear-gradient(
          to bottom,
          rgba(0, 0, 0, 0.2) 0%,
          rgba(0, 0, 0, 0) 20%
        ),
        /* Right shadow */
          linear-gradient(to left, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 20%),
        /* Bottom shadow */
          linear-gradient(to top, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 20%),
        /* Left shadow */
          linear-gradient(to right, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 20%),
        /* Background color */ $rectangleShapeGrd;

      &.selected {
        // Apply the gradient for .selected
        background: 
          /* Top shadow */ linear-gradient(
            to bottom,
            rgba(0, 0, 0, 0.2) 0%,
            rgba(0, 0, 0, 0) 20%
          ),
          /* Right shadow */
            linear-gradient(
              to left,
              rgba(0, 0, 0, 0.2) 0%,
              rgba(0, 0, 0, 0) 20%
            ),
          /* Bottom shadow */
            linear-gradient(to top, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 20%),
          /* Left shadow */
            linear-gradient(
              to right,
              rgba(0, 0, 0, 0.2) 0%,
              rgba(0, 0, 0, 0) 20%
            ),
          $rectangleShapeSelectedGrd;
      }
    }

    .circleBtn {
      width: 30px;
      height: 30px;
      border: $ltThemeBorderColor 1px solid;
      border-radius: $borderRadiusCircle;
      background: $circleShapeGrd;
      cursor: pointer;

      &.selected {
        background: $circleShapeSelectedGrd;
      }
    }
  }

  //# width, height, rotation controls
  .numericalInputContainer {
    display: flex;
    width: 60%;
    flex-direction: row;
    justify-content: left;
    align-items: flex-end;

    //~ width and height controls only
    .dimensionsControlPnl {
      display: flex;
      width: 100%;
      justify-content: center;
      align-self: flex-end;

      form {
        display: flex;
        gap: 10px;

        label {
          display: flex;
          flex-direction: column;
          align-items: center;
        }
      }
    }

    //~ rotation controls only
    .rotationControlPnl {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      width: 100%;

      .rotationLbl {
        margin-bottom: 5px;
      }

      .rotationControls {
        display: flex;
        justify-content: center;
        align-items: center;
      }

      input[type="number"] {
        width: 2.5em;
      }

      button {
        margin: 0 10px;
        cursor: pointer;

        &:hover {
          transform: scale(1.05);
          transition: transform 0.3s ease;
        }
      }
    }
  }

  // # create, delete buttons

  .lifeCycleBtnsPnl {
    display: flex;
    flex-direction: column;
    align-self: flex-end;

    button {
      width: 7em;
      height: 2em;
      padding: 0;
    }

    .generateBtn {
      margin-bottom: 2px;
      background-color: $colorGreen;
      transition: background-color 0.3s ease;

      &:hover {
        background-color: lighten($colorGreen, 10%);
      }
    }
    .deleteBtn {
      background-color: $colorRed;
      margin-bottom: 0;
      transition: background-color 0.3s ease;

      &:hover {
        background-color: lighten($colorRed, 10%);
      }
    }
  }
}
